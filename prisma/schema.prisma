// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

enum Status {
  ACTIVE
  DISABLED
}

enum Plan {
  BASIC
  PREMIUM
}

model Sender {
  id        Int      @id @default(autoincrement())
  title     String
  email     String   @unique
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Contact {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  phone     String?
  business  String?
  status    Status    @default(ACTIVE)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  segment   Segment?  @relation(fields: [segmentId], references: [id])
  segmentId Int?
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
}

model Segment {
  id        Int       @id @default(autoincrement())
  title     String    @unique
  contacts  Contact[]
  status    Status    @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
}

model Campaign {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  subject    String
  content    String
  status     Status   @default(ACTIVE)
  senderId   Int?
  segmentId  Int?
  totalShots Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
}

model Schedule {
  id         Int      @id @default(autoincrement())
  dates      String[]
  segmentId  Int?
  campaignId Int?
  status     Status   @default(ACTIVE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
}

model Template {
  id           Int      @id @default(autoincrement())
  htmlPart     String
  subjectPart  String
  templateName String   @unique
  status       Status   @default(ACTIVE)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User?    @relation(fields: [userId], references: [id])
  userId       Int?
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  document       String     @unique
  customerId     String     @unique
  password       String
  status         Status     @default(ACTIVE)
  verified       Boolean    @default(false)
  payment_status Boolean    @default(false)
  planMode       Plan
  senders        Sender[]
  campaigns      Campaign[]
  contacts       Contact[]
  segments       Segment[]
  schedules      Schedule[]
  templates      Template[]
  transactionId  String     @unique
  accessToken    String     @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}
